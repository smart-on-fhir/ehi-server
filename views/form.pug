- const format = d => `${d.getFullYear()}-${String(d.getMonth()+1).padStart(2, "0")}-${String(d.getDate()).padStart(2, "0")}`
doctype html
html(lang="en")
    head
        title SMART EHI Export Server - Export Filter Form
        link(rel="stylesheet", href="/style.css")
    body
        #main
            h1.header
                img(src="/logo.svg" align="left")
                | EHI Export Server
            
            form(enctype="application/json" autocomplete="off")
                h2.center INFORMATION TO BE RELEASED
                p.center.text-muted Please check all that apply, and optionally specify date ranges
                br


                h3 Electronic Records
                hr
                table
                    thead
                        tr
                            th(style="min-width:12em")
                            th From
                            th To
                            th(style="width:100%") Notes
                    tbody
                        each parameter, key in job.parameters
                            if (parameter.group === 1)
                                tr(data-key=key data-name=parameter.name)
                                    td: label
                                        input(type="checkbox" checked=parameter.enabled)
                                        |  #{parameter.name}
                                    td.small
                                        if parameter.from === false
                                            p.center.text-muted N/A
                                        else
                                            input(
                                                type="date"
                                                disabled=!parameter.enabled
                                                name="from"
                                                value=parameter.from ? format(new Date(parameter.from)) : undefined
                                                placeholder="TEST"
                                            ).from
                                    td.small
                                        if parameter.to === false
                                            p.center.text-muted N/A
                                        else
                                            input(type="date" disabled=!parameter.enabled name="to"    value=parameter.from ? format(new Date(parameter.to  )) : undefined).to
                                    td.small: input(type="text" disabled=!parameter.enabled name="notes" value=parameter.notes).full-width
                br
                br
                h3 Other Documents
                hr

                table
                    thead
                        tr
                            th(style="min-width:12em")
                            th From
                            th To
                            th(style="width:100%") Notes
                    tbody
                        each parameter, key in job.parameters
                            if (parameter.group === 2)
                                tr(data-key=key data-name=parameter.name)
                                    td: label
                                        input(type="checkbox" checked=parameter.enabled)
                                        |  #{parameter.name}
                                    td.small
                                        if parameter.from === false
                                            p.center.text-muted N/A
                                        else
                                            input(type="date" disabled=!parameter.enabled name="from"  value=parameter.from ? format(new Date(parameter.from)) : undefined).from
                                    td.small
                                        if parameter.to === false
                                            p.center.text-muted N/A
                                        else
                                            input(type="date" disabled=!parameter.enabled name="to"    value=parameter.from ? format(new Date(parameter.to  )) : undefined).to
                                    td.small: input(type="text" disabled=!parameter.enabled name="notes" value=parameter.notes).full-width
                br
                br
                hr
                
                h2.center AUTHORIZATION FOR RELEASE OF PROTECTED OR PRIVILEGED HEALTH INFORMATION
                p.center.text-muted Please indicate if you give permission to release the following information if present in your record
                br
                div.checkbox-row
                    label
                        input(type="checkbox" name="hiv" title=job.authorizations.hiv.name checked=!!job.authorizations.hiv.value)
                        |  #{job.authorizations.hiv.name}
                div.checkbox-row
                    label
                        input(
                            type="checkbox" name="alcoholAndDrug" title=job.authorizations.alcoholAndDrug.name checked=!!job.authorizations.alcoholAndDrug.value)
                        |  #{job.authorizations.alcoholAndDrug.name}
                div.checkbox-row
                    label
                        input(type="checkbox" name="mentalHealth" title=job.authorizations.mentalHealth.name checked=!!job.authorizations.mentalHealth.value)
                        |  #{job.authorizations.mentalHealth.name}
                div.checkbox-row
                    label
                        input(type="checkbox" name="confidential" title=job.authorizations.confidential.name checked=!!job.authorizations.confidential.value)
                        |  #{job.authorizations.confidential.name}
                div.checkbox-row
                    label
                        input(type="checkbox" name="domesticViolence" title=job.authorizations.domesticViolence.name checked=!!job.authorizations.domesticViolence.value)
                        |  #{job.authorizations.domesticViolence.name}
                div.checkbox-row
                    label
                        input(type="checkbox" name="sexualAssault" title=job.authorizations.sexualAssault.name checked=!!job.authorizations.sexualAssault.value)
                        |  #{job.authorizations.sexualAssault.name}
                div.checkbox-row.check-text
                    label.nowrap(style="flex:0")
                        input(type="checkbox" name="genetic" title=job.authorizations.genetic.name checked=!!job.authorizations.genetic.value)
                        span  #{job.authorizations.genetic.name}&nbsp;
                    input.inline.small(type="text" placeholder="Type of tests" style="flex:1" disabled=!job.authorizations.genetic.value value=job.authorizations.genetic.value || "")
                div.checkbox-row.check-text
                    label.nowrap(style="flex:0")
                        input(type="checkbox" name="other" title=job.authorizations.other.name checked=!!job.authorizations.other.value)
                        |  #{job.authorizations.other.name}:&nbsp;
                    input.inline.small(type="text" placeholder="Please List" style="flex:1" disabled=!job.authorizations.other.value value=job.authorizations.other.value || "")
                br
                hr
                br
                .center
                    button(type="submit" autofocus) Submit

        script(src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.4/jquery.min.js" integrity="sha512-pumBsjNRGGqkPzKHndZMaAG+bir374sORyzM3uulLV14lN5LyykqNk8eEeUlUkB3U0M4FApyaHraT65ihJhDpQ==" crossorigin="anonymous" referrerpolicy="no-referrer")
        script.
            jQuery(function($) {
                
                const form = document.forms[0];
                const now = new Date();

                function onSubmit(e) {
                    e.preventDefault()

                    const body = {
                        parameters   : {},
                        authorizations: {}
                    };

                    $("tr[data-key]").each((i, tr) => {
                        const $tr = $(tr)
                        const key = $tr.data("key")
                        const name = $tr.data("name")
                        body.parameters[key] = {
                            name,
                            enabled: $('[type="checkbox"]', tr).prop("checked"),
                            from   : $('[name="from"]', tr).prop("valueAsDate")?.toISOString(),
                            to     : $('[name="to"]', tr).prop("valueAsDate")?.toISOString(),
                            notes  : $('[name="notes"]', tr).val()
                        }
                    })

                    $('.checkbox-row input[type="checkbox"]').each((i, cb) => {
                        const $cb  = $(cb)
                        const name = $cb.attr("name")
                        const rec  = body.authorizations[name] = { name: $cb.attr("title"), value: false }
                        if ($cb.prop("checked")) {
                            if (name === "other" || name === "genetic") {
                                rec.value = $cb.closest(".checkbox-row").find('input[type="text"]').val()
                            } else {
                                rec.value = true
                            }
                        }
                    })

                    //- console.log(body)

                    //- const since = parseInt(document.querySelector('input[name="since"]:checked').value, 10)
                    //- document.querySelector("button").disabled = true
                    fetch("/jobs/#{jobId}", {
                        method: "POST",
                        headers: {
                            "content-type" : "application/json",
                            //- "authorization": "Bearer #{token}"
                        },
                        body: JSON.stringify(body)
                    }).then(() => {
                        if ("#{redirect}") {
                            const url = new URL("#{redirect}")
                            //- url.search = window.location.search
                            window.location.href = url.href
                        }
                    }).catch(e => {
                        console.error(e)
                        if ("#{redirect}") {
                            const url = new URL("#{redirect}")
                            url.search = window.location.search
                            url.searchParams.set("error", e.message)
                            window.location.href = url.href
                        }
                    })
                }

                $("form").on("submit", onSubmit);

                $('table input[type="checkbox"]').on("change", e => {
                    $(e.target).closest("tr").find('input[type="date"], input[type="text"]').prop("disabled", !e.target.checked)
                })

                // Initially all date pickers have max equal to today
                $('table input[type="date"]').attr("max", `${now.getFullYear()}-${String(now.getMonth()+1).padStart(2, "0")}-${String(now.getDate()).padStart(2, "0")}`);
                
                // Any from date picker must have its max set to the corresponding to picker
                $('table input.to').on("change", e => {
                    const d = e.target.valueAsDate
                    $(e.target).closest("tr").find('input.from').attr("max", `${d.getFullYear()}-${String(d.getMonth()+1).padStart(2, "0")}-${String(d.getDate()).padStart(2, "0")}`)
                });

                // Any to date picker must have its min set to the corresponding from picker
                $('table input.from').on("change", e => {
                    const d = e.target.valueAsDate
                    $(e.target).closest("tr").find('input.to').attr("min", `${d.getUTCFullYear()}-${String(d.getUTCMonth()+1).padStart(2, "0")}-${String(d.getUTCDate()).padStart(2, "0")}`)
                });

                $('.check-text input[type="checkbox"]').on("change", e => {
                    $(e.target).closest(".check-text").find('input[type="text"]').prop("disabled", !e.target.checked)
                });
            });